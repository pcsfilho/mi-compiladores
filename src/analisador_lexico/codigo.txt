// testes de numeros
class main(void)
{
    variables
    {
        integer a, i;
        integer x;
        float s;
        float b;
    }
    metodos 
    {
        void Teste (void)
        {
            i = 1 -
                3;                // nro(1) op(-) nro(3)
            s = -1..3;            // nro_mal_formado(-1..3)
            b = 1.3.3.6;        // nro_mal_formado(1.3.3.6)
            a = -1@;            // nro_mal_formado(-1@)
            1..3.334.3.3>=casa  // nro_mal_formado(1..3.334.3.3) op(>=) id(casa)
            b = 9.;                // nro_mal_formado(9.)
            1 - 5;                // nro(1) op(-) nro(5)
            1-5;                // nro(1) op(-) nro(5)
            1 -- 2;                // nro(1) op(--) nro(2)
            1--2;                // nro(1) op(--) nro(2)
            1 - - 2;            // nro(1) op(-) nro(-2)
            1 - -2;                // nro(1) op(-) nro(-2)
            j--+5;                 // id(j) op(--) op(+) nro(5)
            j---5;                 // id(j) op(--) op(-) nro(5)
          
        }
    }
} 



// teste com varios erros
	
	class principal {
		variables {
			integer $; //erro: simbolo invalido
			inteiro x;
			integer a_?; //erro: id mal formado
			string nome = "Zezim";
		}
		methods {
			a = 'a1';  //erro: caractere mal formado
			a = 2.&.a; //erro: numero mal formado
			a = 7.x;   //erro: numero mal formado
					
			se (a>10) entao 
			{
				x = -a;
			}
			/* comeca aqui
		}
	} // erro: fecha comentario esperado
	